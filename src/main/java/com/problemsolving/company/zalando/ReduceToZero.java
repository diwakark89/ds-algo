package com.problemsolving.company.zalando;

import java.math.BigInteger;

public class ReduceToZero {
    public static void main(String []args){
        ReduceToZero reduceToZero=new ReduceToZero();
        int ans=0;
//        ans=reduceToZero.Solution
        ans=reduceToZero.Solution("01100");
        System.out.println(ans);
    }

    public int Solution(String S) {
        int count = 0;
        BigInteger divisor = new BigInteger("10", 2);
        BigInteger one = new BigInteger("1", 2);
        BigInteger dividend = new BigInteger(S, 2);
        BigInteger zero=new BigInteger("0");

        while (!dividend.equals(zero) ){
            if(dividend.mod(divisor).equals(zero)){
                dividend=dividend.divide(divisor);
                ++count;
            }else{
                dividend=dividend.subtract(one);
                ++count;
            }
        }
        return count;
    }
    private Long convertBinaryToDecimal(char[] num) {
        Long decimalNumber = 0L;
        int j=0;

        for(int i=num.length-1;i>=0;--i){
            Long val=powOfTwo(j);
            System.out.println(j+" "+val);

            decimalNumber = (Character.getNumericValue(num[i]) * val)+decimalNumber;
            ++j;
        }

        return decimalNumber;
    }
    public Long powOfTwo(int count){
        Long result=1L;
        for(int i=1;i<=count;i++){
            result*=2;
        }
        return result;
    }

    private int convertBinaryToDecimal(long num) {
        int decimalNumber = 0, i = 0;
        long remainder;

        while (num != 0) {
            remainder = num % 10;
            num /= 10;
            decimalNumber += remainder * Math.pow(2, i);
            ++i;
        }

        return decimalNumber;
    }

}
